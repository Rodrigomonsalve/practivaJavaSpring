package pratica2;

//import java.util.*;


//Puede ser "T" o cualquier otra palabra al azar, excepto el signo ?
// Al momento de instanciar esta tipo de clases (genéricas), forzosamente deberemos pasar como parámetro el tipo de objeto con el que va a trabajar. Si no, es incorrecto.
// Generics<?> objetoGenerico = new Generics<Parseos>(); Aquì va a trabajar con el objeto de tipo Parseos. El objeto dentro del cual se guardará el nuevo objeto, se declarará como <?> únicamente. Este signo de interrogación no sirve para crear la clase.
public class Generics<T>{
	
	public int numero = 1;
	String palabra = "Perro";
	
	public Generics() {
		
	}
	
	public String metodoNoGenerico(String palabra) {
		return palabra;
	}
	
	//Como "T" no es realmente nada, al instanciar esta clase, podremos designar el tipo de variable que deberemos pasar como parámetro al ejecutarle el metodoGenerico. Si nos damos cuenta, el parámetro de este método también es T. 
	//La clase también deberá ser genérica.
	//Sin Java Generics el código es más rígido, pues, al instanciar el método sólo podremos pasar como parámetro solo un tipo de dato.
	public T metodoGenerico (T palabra){
		return palabra;
	}
	
	//En este caso, el método es genérico, sin necesidad de que lo sea la clase. T puede ser cualquier tipo de dato.
	public static <T> T soloMetodoGenerico(T palabra) {
		T frase = palabra;
		return frase;
	}
	
	
	
	
	
	

}
