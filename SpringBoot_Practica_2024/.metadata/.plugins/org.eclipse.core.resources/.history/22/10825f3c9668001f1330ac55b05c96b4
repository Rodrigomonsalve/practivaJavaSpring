#Si no tenemos application.properties que haga conexion a base de datos, no permitira iniciar el servidor, en caso de que tengamos la libreria spring-boot-starter-data-jpa.
#Hay que tener cuidado con poner caracteres extranos en este archivo. No se mostrara ningun error aqui, pero se vera reflejado de forma indirecta en el pom.xml. Mostrara posiblemente un error en mojo y el server no se podrá iniciar.
# Este archivo, al igual que cualquier otro (xml, json, jsp) deben estar codificados en UTF-8. De lo contario el server no se podrá iniciar.
#Hay que recordar que la conexión a base de datos en SpringFramwork se realiza dentro del xml contenedor de beans (spring-crud-servlet.xml), que se encuentra dentro de la carpeta WEB-INF, si es un proyecto web. De lo contrario, hay que recordar que todo contenedeor de beans se encuentra en la carpeta src (applicationContext.xml)
spring.application.name=BD

spring.datasource.url=jdbc:mysql://localhost:3306/usuarios
                     	
spring.datasource.username=root

spring.datasource.password=

spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=update

#Esta es la forma de modificar el puerto en el cual se lanza el servidor Tomcat. Si no pones nada, por defecto es el 8080. En Spring Framework hay que recordar que el puerto de modifica en la pestaña "Servers".
server.port = 8082

#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect      Un dialecto se usa para traducir sentencias SQL en HDL. Si no se usa un dialecto espec�fico, Hibernate utilizar� uno por defecto, pero puede no ser eficaz.


