package com.cyberslex.api.service;

import java.io.Serializable;
import java.util.List;
import java.util.Optional;

import com.cyberslex.api.entity.Base;
import com.cyberslex.api.entity.Persona;
import com.cyberslex.api.repository.BaseRepository;

import jakarta.transaction.Transactional;

public abstract class BaseServiceImpl<E extends Base, ID extends Serializable> implements IBaseService<E, ID> {

	protected BaseRepository<E, ID> baseRepository;

	public BaseServiceImpl(BaseRepository<E, ID> baseRepository) {
		super();
		this.baseRepository = baseRepository;
	}
	
	@Override
	@Transactional
	public List<E> findAll() throws Exception {
		try {
			
		List<E> entities = baseRepository.findAll();
		return entities;
		
		}catch(Exception e) {
			
			throw new Exception(e.getMessage());
			
		}
	}

	@Override
	@Transactional
	public E findById(ID Id) throws Exception {
		try {
			Optional<E> entityOptional = baseRepository.findById(Id);
			return entityOptional.get();
			
		}catch(Exception e) {
			throw new Exception(e.getMessage());
	}	
	}	

	@Override
	@Transactional
	public E save(E entity) throws Exception {
		try {
			entity = baseRepository.save(entity);
			return entity;
			
		}catch(Exception e) {
			
			throw new Exception(e.getMessage());
	}
	}

	@Override
	@Transactional
	public E update(ID id, E entity) throws Exception {
		try {
			
			Optional<E> entityOptional = baseRepository.findById(id);
			
			E persona = entityOptional.get();
			
			persona = baseRepository.save(entity);
			
			return persona;
			
		}catch(Exception e) {
			
			throw new Exception(e.getMessage());
			
			
	}
	}

	@Override
	@Transactional
	public boolean delete(Long id) throws Exception {
	
		try {
			
			if(personaRepository.existsById(id)) {
				
				personaRepository.deleteById(id);
				
				return true;
			}else {
				
				throw new Exception();
				
			}
			
		}catch(Exception e) {
			
			throw new Exception(e.getMessage());
			
	}
		
	}
	
}
